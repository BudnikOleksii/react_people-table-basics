{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PersonInfo","born","died","fatherName","motherName","mother","father","selectedPersonSlug","useParams","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","data","preparedPeople","_","arr","find","catch","finally","length","NotFoundPage","createRoot","document","getElementById","render","path","element","replace","index"],"mappings":"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","file":"static/js/main.afb6b46d.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => (\n      classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home page\" />\n        <PageNavLink to=\"/people\" text=\"People page\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <NavLink\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonInfo: FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n  const { slug: selectedPersonSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': selectedPersonSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : (motherName || '-')}\n      </td>\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => <PersonInfo key={person.slug} person={person} />)}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then(data => {\n        const preparedPeople = data.map((person, _, arr) => ({\n          ...person,\n          mother: arr.find(mother => mother.name === person.motherName),\n          father: arr.find(father => father.name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(setErrorMessage)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !errorMessage && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}