{"version":3,"sources":["components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","classNames","to","NotFoundPage","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","selectPerson","slug","sex","name","onClick","MyComponent","people","useState","selectedPerson","setSelectedPerson","map","born","died","fatherName","motherName","mother","father","PeoplePage","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","data","preparedPeople","_","arr","find","catch","finally","length","PeopleTable","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b5eb348a.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/\"\n        >\n          Home page\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n          to=\"/people\"\n        >\n          People page\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  selectPerson: (slug: string) => void;\n};\n\nexport const PersonLink: FC<Props> = ({ person, selectPerson }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <NavLink\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n      onClick={() => selectPerson(slug)}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const MyComponent: FC<Props> = ({ people }) => {\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug,\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            mother,\n            father,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': selectedPerson === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} selectPerson={setSelectedPerson} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother ? (\n                  <PersonLink\n                    person={mother}\n                    selectPerson={setSelectedPerson}\n                  />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n              <td>\n                {father ? (\n                  <PersonLink\n                    person={father}\n                    selectPerson={setSelectedPerson}\n                  />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default MyComponent;\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport PeopleTable from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then(data => {\n        const preparedPeople = data.map((person, _, arr) => ({\n          ...person,\n          mother: arr.find(mother => mother.name === person.motherName),\n          father: arr.find(father => father.name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(setErrorMessage)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !errorMessage && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}